<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clw.mapper.ReviewMapper">
    <resultMap id="BaseResultMap" type="com.clw.domain.Review">
        <!--@mbg.generated-->
        <!--@Table review-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="home_id" jdbcType="INTEGER" property="homeId"/>
        <result column="user_review" jdbcType="LONGVARCHAR" property="userReview"/>
        <result column="host_review" jdbcType="LONGVARCHAR" property="hostReview"/>
        <result column="rate" jdbcType="DECIMAL" property="rate"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, order_id, user_id, home_id, user_review, host_review, rate, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from review
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from review
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.clw.domain.Review" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into review (order_id, user_id, home_id, user_review,
        host_review, rate, create_time, update_time)
        values (#{userId,jdbcType=INTEGER}, #{homeId,jdbcType=INTEGER}, #{userReview,jdbcType=LONGVARCHAR},
        #{hostReview,jdbcType=LONGVARCHAR}, #{rate,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.clw.domain.Review"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into review
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="homeId != null">
                home_id,
            </if>
            <if test="userReview != null">
                user_review,
            </if>
            <if test="hostReview != null">
                host_review,
            </if>
            <if test="rate != null">
                rate,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="homeId != null">
                #{homeId,jdbcType=INTEGER},
            </if>
            <if test="userReview != null">
                #{userReview,jdbcType=LONGVARCHAR},
            </if>
            <if test="hostReview != null">
                #{hostReview,jdbcType=LONGVARCHAR},
            </if>
            <if test="rate != null">
                #{rate,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.clw.domain.Review">
        <!--@mbg.generated-->
        update review
        <set>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="homeId != null">
                home_id = #{homeId,jdbcType=INTEGER},
            </if>
            <if test="userReview != null">
                user_review = #{userReview,jdbcType=LONGVARCHAR},
            </if>
            <if test="hostReview != null">
                host_review = #{hostReview,jdbcType=LONGVARCHAR},
            </if>
            <if test="rate != null">
                rate = #{rate,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.clw.domain.Review">
        <!--@mbg.generated-->
        update review
        set order_id = #{orderId,jdbcType=INTEGER}
        user_id = #{userId,jdbcType=INTEGER},
        home_id = #{homeId,jdbcType=INTEGER},
        user_review = #{userReview,jdbcType=LONGVARCHAR},
        host_review = #{hostReview,jdbcType=LONGVARCHAR},
        rate = #{rate,jdbcType=DECIMAL},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <resultMap id="ReviewPojoMap" type="com.clw.pojo.ReviewPojo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="nick" jdbcType="VARCHAR" property="nick"/>
        <result column="home_id" jdbcType="INTEGER" property="homeId"/>
        <result column="user_review" jdbcType="LONGVARCHAR" property="userReview"/>
        <result column="host_review" jdbcType="LONGVARCHAR" property="hostReview"/>
        <result column="rate" jdbcType="DECIMAL" property="rate"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <select id="selectReviewByHomeId" resultMap="ReviewPojoMap">
    SELECT
	r.*,
	u.nick,u.icon
    FROM
	review r
	LEFT JOIN `user` u ON r.user_id = u.id
    WHERE
	home_id = #{id}
      ORDER BY create_time DESC
  </select>

    <select id="selectReviewByUserIdAndHomeId" resultType="String">
        select host_review
        from review
        where user_id = #{user_id} and home_id = #{home_id}
    </select>
    <update id="hostReview">
        update review
        set host_review = #{reviewContent}
        where id = #{reviewId}
    </update>
    <select id="selectReviewByOrderId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include>
        from review
        where order_id = #{id}
    </select>

    <resultMap id="AdminResultMap" type="com.clw.pojo.AdminReview">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="user_review" jdbcType="LONGVARCHAR" property="userReview"/>
        <result column="host_review" jdbcType="LONGVARCHAR" property="hostReview"/>
        <result column="rate" jdbcType="DECIMAL" property="rate"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>

        <collection property="homeName"
                    ofType="String"
                    select="com.clw.mapper.HomeMapper.selectHomeNameById"
                    column="home_id"></collection>
        <collection property="username"
                    ofType="String"
                    select="com.clw.mapper.UserMapper.selectUsername"
                    column="user_id"></collection>
    </resultMap>
    <select id="getReviewInfo" resultMap="AdminResultMap">
        select r.*
        from review r
        left join home h on r.home_id = h.id
        <where>
            <if test="input != null">
                OR h.title like concat('%', #{input}, '%')
            </if>
        </where>
    </select>

    <select id="selectAvgRate" resultType="decimal">
        select IFNULL(AVG(rate),0) from review
        where home_id = #{id}
    </select>
</mapper>